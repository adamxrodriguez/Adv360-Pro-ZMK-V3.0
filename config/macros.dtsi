macro_new_copy_line: macro_new_copy_line{
compatible = "zmk,behavior-macro";
label = "macro_new_copy_line";
#binding-cells = <0>;
bindings = ;
};
macro_kinesis: macro_kinesis{
compatible = "zmk,behavior-macro";
label = "macro_kinesis";
#binding-cells = <0>;
bindings = <&kp LS(J)>, <&kp E>, <&kp S>, <&kp U>, <&kp S>;
};
macro_const: macro_const{
compatible = "zmk,behavior-macro";
label = "macro_const";
#binding-cells = <0>;
bindings = <&kp C>, <&kp O>, <&kp N>, <&kp S>, <&kp T>, <&kp SPACE>;
};
macro_delete_whole_line: macro_delete_whole_line{
compatible = "zmk,behavior-macro";
label = "macro_delete_whole_line";
#binding-cells = <0>;
bindings = <&kp HOME>, <&kp LS(END)>, <&kp DEL>;
};
macro_copy_whole_line: macro_copy_whole_line{
compatible = "zmk,behavior-macro";
label = "macro_copy_whole_line";
#binding-cells = <0>;
bindings = <&kp LG(LEFT)>, <&kp LS(END)>, <&kp LG(C)>;
};
macro_duplicate_whole_line: macro_duplicate_whole_line{
compatible = "zmk,behavior-macro";
label = "macro_duplicate_whole_line";
#binding-cells = <0>;
bindings = <&kp LG(LEFT)>, <&kp LS(END)>, <&kp LG(C)>, <&kp LG(RIGHT)>, <&kp ENTER>, <&kp LG(V)>;
};
macro_comment_out: macro_comment_out{
compatible = "zmk,behavior-macro";
label = "macro_comment_out";
#binding-cells = <0>;
bindings = <&kp LG(SLASH)>;
};